Замечание!!!
Принято такое наименование модулей, классов и объектов:
Core - микроядро системы (включает в себя механизм передачи сообщений и
  объект доступа к данным (KnowledgeBase))
Kernel - ядро системы (включает в себя микроядро, машину логического вывода,
  базу знаний (объект доступа к данным и объекты реализующие непосредственно
  запись и чтение данных)), агентов). Kernel является ядром для внешних клиентов.


Микроядро системы предназначено для обеспечения обмена данными между
модулями (агентами, клиентами и базой знаний).
Все модули обмениваются между собой сообщениями в FIPA-ACL формате.
Для обеспечения быстродействия внутри программы сообщения
формируются и передаются в виде объектов TAclMessage.

В некоторых случаях разрешается обращаться к модулям системы минуя передачу
сообщений через микроядро.

При поступлении сообщения в микроядро (вызов функции AddMessage()) сообщение
передается тому модулю, кому оно предназначено (Message.SendTo).

Если сообщение направлено микроядру, то в поле Message.SendTo указывается "Core".
Если в сообщение указана команда для выполнения, то она выполняется
(используется метод AddCommand()).
Метод AddCommand() для выполнения команд можно вызывать напрямую
(без использования метода AddMessage()).
Микроядро может обрабатывать следующие команды (0.1 alpha):
- AddAgent - Добавить агента в список.
- RemoteAgent - Удалить агента из списка.
- AddClient - Добавить клиента.
- RemoteClient - Удалить клиента.
- AddPool - Связать существующий пул с объектом доступа к знаниям.
- RemotePool - Освободить пул от оспользования объектом доступа к знаниям.
